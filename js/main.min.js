(()=>{var __webpack_modules__={"./src/scripts/main.js":()=>{eval("document.querySelectorAll('.button').forEach(button => {\r\n\r\n    let duration = 3000,\r\n        svg = button.querySelector('svg'),\r\n        svgPath = new Proxy({\r\n            y: null,\r\n            smoothing: null\r\n        }, {\r\n            set(target, key, value) {\r\n                target[key] = value;\r\n                if(target.y !== null && target.smoothing !== null) {\r\n                    svg.innerHTML = getPath(target.y, target.smoothing, null);\r\n                }\r\n                return true;\r\n            },\r\n            get(target, key) {\r\n                return target[key];\r\n            }\r\n        });\r\n\r\n    button.style.setProperty('--duration', duration);\r\n\r\n    svgPath.y = 20;\r\n    svgPath.smoothing = 0;\r\n\r\n    button.addEventListener('click', e => {\r\n        \r\n        e.preventDefault();\r\n\r\n        if(!button.classList.contains('loading')) {\r\n\r\n            button.classList.add('loading');\r\n\r\n            gsap.to(svgPath, {\r\n                smoothing: .3,\r\n                duration: duration * .065 / 1000\r\n            });\r\n\r\n            gsap.to(svgPath, {\r\n                y: 12,\r\n                duration: duration * .265 / 1000,\r\n                delay: duration * .065 / 1000,\r\n                ease: Elastic.easeOut.config(1.12, .4)\r\n            });\r\n\r\n            setTimeout(() => {\r\n                svg.innerHTML = getPath(0, 0, [\r\n                    [3, 14],\r\n                    [8, 19],\r\n                    [21, 6]\r\n                ]);\r\n            }, duration / 2);\r\n\r\n        }\r\n\r\n    });\r\n\r\n});\r\n\r\nfunction getPoint(point, i, a, smoothing) {\r\n    let cp = (current, previous, next, reverse) => {\r\n            let p = previous || current,\r\n                n = next || current,\r\n                o = {\r\n                    length: Math.sqrt(Math.pow(n[0] - p[0], 2) + Math.pow(n[1] - p[1], 2)),\r\n                    angle: Math.atan2(n[1] - p[1], n[0] - p[0])\r\n                },\r\n                angle = o.angle + (reverse ? Math.PI : 0),\r\n                length = o.length * smoothing;\r\n            return [current[0] + Math.cos(angle) * length, current[1] + Math.sin(angle) * length];\r\n        },\r\n        cps = cp(a[i - 1], a[i - 2], point, false),\r\n        cpe = cp(point, a[i - 1], a[i + 1], true);\r\n    return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\r\n}\r\n\r\nfunction getPath(update, smoothing, pointsNew) {\r\n    let points = pointsNew ? pointsNew : [\r\n            [4, 12],\r\n            [12, update],\r\n            [20, 12]\r\n        ],\r\n        d = points.reduce((acc, point, i, a) => i === 0 ? `M ${point[0]},${point[1]}` : `${acc} ${getPoint(point, i, a, smoothing)}`, '');\r\n    return `<path d=\"${d}\" />`;\r\n}\n\n//# sourceURL=webpack://gulp-project/./src/scripts/main.js?")}},__webpack_exports__={};__webpack_modules__["./src/scripts/main.js"]()})();